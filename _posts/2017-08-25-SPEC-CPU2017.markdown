---
title: "SPEC CPU 2017 command lines"
layout: post
date: 2017-08-25 12:43
headerImage: false
tag:
- SPEC CPU 2017
category: blog
author: Agustin Navarro
description: SPEC CPU2017 command lines for reference dataset

---

# Integer

## Rate

### 500.perlbench_r

```
perlbench_r -I./lib checkspam.pl 2500 5 25 11 150 1 1 1 1
```
```
perlbench_r -I./lib diffmail.pl 4 800 10 17 19 300
```
```
perlbench_r -I./lib splitmail.pl 1600 12 26 16 4500
```

### 502.gcc_r
```
cpugcc_r gcc-pp.c -O3 -finline-limit=0 -fif-conversion -fif-conversion2
```
```
cpugcc_r gcc-pp.c -O2 -finline-limit=36000 -fpic
```
```
cpugcc_r gcc-smaller.c -O3 -fipa-pta
```
```
cpugcc_r ref32.c -O5
```
```
cpugcc_r ref32.c -O3 -fselective-scheduling -fselective-scheduling2
```

### 505.mcf_r
```
mcf_r inp.in
```

### 520.omnetpp_r
```
omnetpp_r omnetpp.ini
```

### 523.xalancbmk_r
```
cpuxalan_r -v t5.xml xalanc.xsl
```

### 525.x264_r
**Note:** This benchmark has several steps in order to run it.

#### Generate input files
```
ldecod_r -i BuckBunny.264 -o BuckBunny.yuv
```

#### Run Benchmark
```
x264_r --pass 1 --stats x264_stats.log --bitrate 1000 --frames 1000 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
x264_r --pass 2 --stats x264_stats.log --bitrate 1000 --frames 1000 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
x264_r --seek 500 --frames 1250 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
```
```
x264_r --dumpyuv 200 --frames 1250 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
```

### 531.deepsjeng_r
```
deepsjeng_r ref.txt
```

### 541.leela_r
```
leela_r ref.sgf
```
### 548.exchange2_r
```
exchange2_r 6
```

### 557.xz_r
```
xz_r cld.tar.xz 160 19cf30ae51eddcbefda78dd06014b4b96281456e078ca7c13e1c0c9e6aaea8dff3efb4ad6b0456697718cede6bd5454852652806a657bb56e07d61128434b474 59796407 61004416 6
```
```
xz_r cpu2006docs.tar.xz 250 055ce243071129412e9dd0b3b69a21654033a9b723d874b2015c774fac1553d9713be561ca86f74e4f16f22e664fc17a79f30caa5ad2c04fbc447549c2810fae 23047774 23513385 6e
```
```
xz_r input.combined.xz 250 a841f68f38572a49d86226b7ff5baeb31bd19dc637a922a972b2e6d1257a890f6a544ecab967c313e370478c74f760eb229d4eef8a8d2836d233d3e9dd1430bf 40401484 41217675 7
```

## SPECspeed

### 600.perlbench_s

```
perlbench_s -I./lib checkspam.pl 2500 5 25 11 150 1 1 1 1
```
```
perlbench_s -I./lib diffmail.pl 4 800 10 17 19 300
```
```
perlbench_s -I./lib splitmail.pl 1600 12 26 16 4500
```

### 602.gcc_s
```
sgcc gcc-pp.c -O5 -fipa-pta
```
```
sgcc gcc-pp.c -O5 -finline-limit=1000 -fselective-scheduling -fselective-scheduling2
```
```
sgcc gcc-pp.c   -O5 -finline-limit=24000 -fgcse -fgcse-las -fgcse-lm -fgcse-sm
```

### 605.mcf_s
```
mcf_s inp.in
```

### 620.omnetpp_s
```
omnetpp_s omnetpp.ini
```

### 623.xalancbmk_s
```
xalancbmk_s -v t5.xml xalanc.xsl
```

### 625.x264_s
**Note:** This benchmark has several steps in order to run it.

#### Generate input files
```
ldecod_s -i BuckBunny.264 -o BuckBunny.yuv
```

#### Run Benchmark
```
x264_s --pass 1 --stats x264_stats.log --bitrate 1000 --frames 1000 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
x264_s --pass 2 --stats x264_stats.log --bitrate 1000 --frames 1000 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
x264_s --seek 500 --frames 1250 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
```
```
x264_s --dumpyuv 200 --frames 1250 -o BuckBunny_New.264 BuckBunny.yuv 1280x720
```

### 631.deepsjeng_s
```
deepsjeng_r ref.txt
```

### 641.leela_s
```
leela_s ref.sgf
```
### 648.exchange2_s
```
exchange2_s 6
```

### 657.xz_s
```
xz_s cpu2006docs.tar 6643 055ce243071129412e9dd0b3b69a21654033a9b723d874b2015c774fac1553d9713be561ca86f74e4f16f22e664fc17a79f30caa5ad2c04fbc447549c2810fae 1036078272 1111795472 4
```
```
xz_s cld.tar 1400 19cf30ae51eddcbefda78dd06014b4b96281456e078ca7c13e1c0c9e6aaea8dff3efb4ad6b0456697718cede6bd5454852652806a657bb56e07d61128434b474 536995164 539938872 8
```

# Float Point

## Rate

### 503.bwaves_r
```
bwaves_r < bwaves_1.in
```
```
bwaves_r < bwaves_2.in
```
```
bwaves_r < bwaves_3.in
```
```
bwaves_r < bwaves_4.in
```

### 507.cactuBSSN_r
```
cactuBSSN_r spec_ref.par

```

### 508.namd_r
```
namd_r --input apoa1.input --output apoa1.ref.output --iterations 65
```

### 510.parets_r
```
parest_r ref.prm
```

### 511.povray_r
```
povray_r SPEC-benchmark-ref.ini
```

### 519.lbm_r
```
lbm_r 3000 reference.dat 0 0 100_100_130_ldc.of
```

### 521.wrf_r
```
wrf_r 
```

### 526.blender_r
```
blender_r sh3_no_char.blend --render-output blender.out_ -b -F RAWTGA -s 849 -e 849 -a
```

### 527.cam4_r
```
cam4_r
```

### 538.imagick_r
```
imagick_r -limit disk 0 refrate_input.tga -edge 41 -resample 181% -emboss 31 -colorspace YUV -mean-shift 19x19+15% -resize 30% refrate_output.tga
```

### 544.nab_r
```
nab_r 1am0 1122214447 122
```

### 549.fotonik3d_r
```
fotonik3d_r
```

### 554.roms_r
```
roms_r < ocean_benchmark2.in.x
```

## Speed

### 603.bwaves_s
```
bwaves_s < bwaves_1.in
```
```
bwaves_s < bwaves_2.in
```

### 607.cactuBSSN_s
```
cactuBSSN_s spec_ref.par

```

### 619.lbm_s
```
lbm_s 2000 reference.dat 0 0 200_200_260_ldc.of
```

### 621.wrf_s
```
wrf_s
```

### 627.cam4_s
```
cam4_s
```

### 638.imagick_s
```
imagick_s  -limit disk 0 refspeed_input.tga -edge 41 -resample 181% -emboss 31 -colorspace YUV -mean-shift 19x19+15% -resize 30% refrate_output.tga
```
### 644.nab_s
```
nab_s 3j1n 20140317 220
```

### 649.fotonik3d_s
```
fotonik3d_s
```

### 654.roms_r
```
sroms < ocean_benchmark3.in.x
```
